#include <iostream>
#include <unistd.h>
#include <vector>
#include <string>
#include <stdio.h>

using namespace std;

int main(int argc, char **argv)
{
  cout << "$"; //print command prompt
  string cmd;
  cin >> cmd; //get user command
  while(cmd!="exit"){
    int lastc = -1; //records last command, -1 means no last command 0 means ; 1 means && 2 means ||
    bool lasts = false; //records if last command failed or not, true for succeeded false for failed
    while(cmd!=""){
      if(cmd.find('#')!=-1) cmd.erase(cmd.find('#'),-1); //anything after # is just a comment so you can just delete it
      int i=cmd.find_first_of(";|&");
      string cmd0=cmd;
      if(i!=-1){ //if there's another operator in the line
        if(cmd.at(i)==';' || (cmd.at(i)=='&' && cmd.at(i+1)=='&') || (cmd.at(i)=='|' && cmd.at(i+1)=='|'){
          cmd0 = cmd.substr(0,i); //cmd0 is the next command
          if(cmd.at(i)==';') cmd.erase(0,i+1); //trim cmd if the operator was a ;
          else cmd.erase(0,i+2); //trim if operator was && or ||
        }
      } //now we have our cmd0 which is the command we're going to use for now
      
      if(lastc==-1||lastc==0) letsgo(cmd0); //last command was a semicolon or no previous command so just run
      else if(lastc==1){ //last command was &&
        if(lasts==true) { //and the last command succeeded so run
          letsgo(cmd0);
          
        } 
      }
      else if(lastc==2){ //last command was ||
        if(lasts==false) {letsgo(cmd0);} //and the last command failed so run
      }
        
    }
    }letsgo(cmd);
    else if()
    }
    
    
    /*char example_8[] = "Testing 1 to 2 find 12 many 21 delims 121 in a 212 string";
    char *token;
    token = strtok(example_8, ";&|");*/
    
    
    cout << "$";
    cin >> cmd;
  }
  
  return 0;
}

